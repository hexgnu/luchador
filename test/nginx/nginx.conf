worker_processes  1;

events {
    worker_connections  1024;
}

http {
	  lua_package_path "/usr/local/lib/lua/?.lua;$prefix/../../lib/?.lua;;";
    lua_shared_dict cache 10m;
    keepalive_timeout  65;

    server {
        listen       8081;
        server_name  test;

        location @memcached {
          set $debug_headers 'true';
          default_type 'text/html';
          content_by_lua "
            local Cache = require 'luchador.cache'
						local table = table

            function request_logger(types)
							ngx.header['before-response'] = table.concat(types, '-')
            end

            Cache.new('/app_proxy', {
                        memcached_servers = {'127.0.0.1'},
                        before_response   = request_logger,
                        after_response    = function() end
                      }):serve()
          ";
          error_page 404 503 = @app;
          add_header Source memcached; # Handy for development
        }

        location /app_proxy {
            content_by_lua "
                local uri = ngx.var.request_uri
                uri = uri:sub(2, #uri)
                for h in uri:gmatch('[^;]+') do
                    local k, v = h:match(' *(.-): *(.*)')
                    ngx.header[k] = v
                end
                ngx.say(ngx.var.request_uri)
            ";
        }
        location @app {
          content_by_lua "ngx.say('hi')";
        }

        try_files $uri @memcached;
    }
}
